name: Build, Push Docker Image, and Deploy CDK

on:
  push:
    branches:
      - main

env:
  AWS_REGION: "us-east-1"
  ECR_REPOSITORY: "mlopsinfrastack-ecrrepository4d7b3ee1-mhonmkqlgdt6"
  AWS_ACCOUNT_ID: "905418307151"

jobs:
  # Job 1: Build, Push Docker Image to ECR, CDK Diff
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: $AWS_REGION
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ github.run_number }} .

      # Push Docker Image
      - name: Push Docker Image
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:${{ github.run_number }}

      # CDK Diff
      - name: CDK Diff
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: $AWS_REGION
        run: |
          npm install -g aws-cdk
          npm install
          cdk diff --context buildNumber=${{ github.run_number }}

  # Job 2: Deploy and train model
  cdk-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment:
      name: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # CDK Deploy
      - name: CDK Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: $AWS_REGION
        run: |
          npm install -g aws-cdk
          npm install
          cdk deploy --require-approval never --context buildNumber=${{ github.run_number }}
